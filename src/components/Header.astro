---
import { menuMain } from "~/data/menus.js";
import LogoContainer from "~/components//LogoContainer.astro";
import SocialMediaIcons from "./SocialMediaIcons.astro";


const rmTrailingSlash = (path: string): string => {
  return path.endsWith("/") && path.length > 1 
    ? path.slice(0, path.length - 1) 
    : path;
}

const pathname = rmTrailingSlash(Astro.url.pathname);
export interface button {
  button : string
}
export interface laguages {
  en: button,
  es: button
}

const DEFAULT_LANGUAGE = 'es';
const content:laguages = {
  en: {
    button: "Español",
  },
  es: {
    button: "English",
  },
};
---

<header x-data="{ open: false }" @keydown.window.escape="open = false">
	<div>
		<div id="header-wrapper" class="fixed top-4 z-40 inset-x-0 w-full">
			<div class="container">
				<div class="container max-lg:px-4 max-w-none bg-white shadow rounded-xl py-4 lg:py-6">
					<nav class="flex relative items-center justify-between" aria-label="Global">
						<a href="/" class="relative z-10">
							<LogoContainer />
						</a>
						<div class="flex lg:hidden">
							<button
								type="button"
								class="-m-2.5 inline-flex items-center justify-center p-2.5"
								@click="open = true"
							>
								<span class="sr-only">Open main menu</span>
								<svg
									class="size-6 text-teal-500"
									fill="none"
									viewBox="0 0 24 24"
									stroke-width="1.5"
									stroke="currentColor"
									aria-hidden="true"
									data-slot="icon"
								>
									<path
										stroke-linecap="round"
										stroke-linejoin="round"
										d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
								</svg>
								
							</button>
							
						</div>

						
						
						<div class="max-lg:hidden absolute w-full inset-x-0">
							<div class="flex gap-x-12 justify-end xl:justify-center items-center">
								{
									menuMain.map((item) => (
										<a
											href={item.url}
											class={`transition text-base/6 font-semibold hover:text-fuchsia-500 ${pathname === item.url ? "menu-item-active" : ""}`}
										>
											{item.name}
										</a>
									))
								}
								
							</div>
							
							
						</div>
						
						
						<div class="relative z-10 flex items-center gap-x-4 max-xl:hidden">
							<SocialMediaIcons />
							<div class="lg:min-w-max flex items-center sm:w-max w-full pb-6 lg:pb-0 border-b border-box-bg lg:border-0 px-6 lg:px-0">
								<a
								  id="language-toggle"
								  class={`px-6 py-3 rounded-full outline-none relative overflow-hidden border duration-300 ease-linear
									after:absolute after:inset-x-0 after:aspect-square after:scale-0 after:opacity-70 after:origin-center after:duration-300 after:ease-linear after:rounded-full after:top-0 after:left-0 after:bg-[#172554]
									hover:after:opacity-100 hover:after:scale-[2.5] flez justify-center w-full sm:w-max  hover:text-gray-200 language-toggle`}
								>
								  <span class={`relative  z-10`} set:html={content[DEFAULT_LANGUAGE].button}>Español</span>
								</a>
					
							</div>
						</div>
						
						
					</nav>
				</div>
			</div>
			
		</div>
		
		
		
		<div class="lg:hidden" x-ref="dialog" x-show="open" x-cloak aria-modal="true">
			<div
				class="fixed inset-0 z-50 w-full overflow-y-auto bg-white/80 backdrop-blur-sm px-12 py-8"
				x-show="open"
				x-transition:enter="transition ease-out"
				x-transition:enter-start="opacity-0"
				x-transition:enter-end="opacity-100"
				x-transition:leave="transition ease-in"
				x-transition:leave-start="opacity-100"
				x-transition:leave-end="opacity-0"
				x-cloak
			>
				<div class="flex items-center justify-between">
					<LogoContainer />
					<button type="button" class="-m-2.5 p-2.5 text-brand-red" @click="open = false">
						<span class="sr-only">Close menu</span>
						<svg
							class="size-8"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="2"
							stroke="currentColor"
							aria-hidden="true"
							data-slot="icon"
						>
							<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
						</svg>
						
					</button>
				</div>
				<div class="mt-6 flow-root">
					<div class="-my-6 divide-y divide-gray-500/10">
						
						<div class="space-y-2 py-6 mt-16">
							{
								menuMain.map((item) => (
								<a
									x-on:click="open = false"
									href={item.url}
									class={`block py-2 text-center font-semibold text-3xl ${pathname === item.url ? "menu-item-active" : ""}`}
								>
									{item.name}
								</a>
								))
							}
							

							<!-- Botón de cambio de idioma en modo móvil -->
							<div class="flex justify-center pt-6">
								<a
								id="language-toggle"
								class={`px-6 py-3 rounded-full outline-none relative overflow-hidden border duration-300 ease-linear
									after:absolute after:inset-x-0 after:aspect-square after:scale-0 after:opacity-70 after:origin-center after:duration-300 after:ease-linear after:rounded-full after:top-0 after:left-0 after:bg-[#172554]
									hover:after:opacity-100 hover:after:scale-[2.5]  hover:text-gray-200 language-toggle`}
								>
								<span class="relative z-10" set:html={content[DEFAULT_LANGUAGE].button}>Español</span>
								</a>
							</div>
						</div>

					</div>
				</div>
			</div>
		</div>
	</div>
</header>
<script>
    
	import { setLanguage, translate } from "../js/translate";
	
	const DEFAULT_LANGUAGE = 'es';
	const content:any = {
	  en: {
		button: "Español",
	  },
	  es: {
		button: "English",
	  },
	  
	};
	
	const languageToggles = document.querySelectorAll(".language-toggle");
	let buttonText
	languageToggles.forEach((toggle) => {
		buttonText = toggle.querySelector("span");
	});
	
	const renderButton = () => {
		const languageToggles = document.querySelectorAll(".language-toggle") ;

		languageToggles.forEach((toggle) => {
			const buttonText = toggle.querySelector("span");
			toggle.addEventListener("click", (event) => {
			event.preventDefault();
			const currentLanguage = window.localStorage.getItem("languageDefault") || DEFAULT_LANGUAGE;

			if (buttonText) {
				buttonText.textContent = content[currentLanguage].button;
			}

			setLanguage(currentLanguage);
			});
		});
	};
	renderButton()
  
	const handleTranslate= () =>{
		const currentLanguage = window.localStorage.getItem("languageDefault") || DEFAULT_LANGUAGE;
		// console.log({currentLanguage},"Idioma que debe verse en el boton",content[currentLanguage].button);
  
		buttonText!.textContent = content[currentLanguage].button;
		
		translate(currentLanguage);
	}
	// // console.log("Change language boton",changeLanguageBtn, "Default",DEFAULT_LANGUAGE, "")
  
	window.addEventListener("load", ( )=>{
	//   console.log("Dentro Load");
	  
	  renderButton();
	  handleTranslate();
	});
	document.addEventListener("DOMContentLoaded", () => {
	//   console.log("Dentro DOMContent");
	  renderButton();
	  handleTranslate();
	});
	
	document.addEventListener("astro:after-swap", () => {
	//   console.log("Dentro astro after");
		renderButton();
		handleTranslate();
	})

	document.addEventListener("astro:page-load", () => {
		console.log("Dentro astro page load");
		
		const headerWrapper = document.getElementById("header-wrapper")!;
		const setHeaderHeight = () => {
			document.documentElement.style.setProperty("--header-height", `${headerWrapper.offsetHeight}px`);
		};
		setHeaderHeight();
		window.addEventListener("resize", setHeaderHeight);
	});
  
  </script>
  
  <script>
  
	import { setLanguage, translate } from "../js/translate.ts"
  
	// I don't like this, but when change page the language have to set again
	window.addEventListener('popstate', function() {
		// window.location.reload();
		
		const currentLanguage = window.localStorage.getItem("languageDefault") || 'es';
		// console.log("execute", currentLanguage);
		
		translate(currentLanguage);
	}, false);
  
  </script>
  
